{"ast":null,"code":"var _jsxFileName = \"/Users/dominikamoriak/projects-kodilla/react-timer-app/src/components/FormattedTime/FormattedTime.js\";\nimport React from 'react';\nimport styles from './FormattedTime.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormattedTime = _ref => {\n  let {\n    time\n  } = _ref;\n  const formatTime = milliseconds => {\n    const hours = Math.floor(milliseconds / (60 * 60 * 1000)).toString().padStart(2, '0');\n    const minutes = Math.floor(milliseconds / (60 * 1000) % 60).toString().padStart(2, '0');\n    const seconds = Math.floor(milliseconds / 1000 % 60).toString().padStart(2, '0');\n    const ms = (milliseconds % 1000).toString().padStart(3, '0');\n    return `${hours}:${minutes}:${seconds}.${ms}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.time,\n    children: formatTime(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n_c = FormattedTime;\nexport default FormattedTime;\nvar _c;\n$RefreshReg$(_c, \"FormattedTime\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","FormattedTime","_ref","time","formatTime","milliseconds","hours","Math","floor","toString","padStart","minutes","seconds","ms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dominikamoriak/projects-kodilla/react-timer-app/src/components/FormattedTime/FormattedTime.js"],"sourcesContent":["import React from 'react';\nimport styles from './FormattedTime.module.scss';\n\nconst FormattedTime = ({ time }) => {\n  const formatTime = (milliseconds) => {\n    const hours = Math.floor(milliseconds / (60 * 60 * 1000))\n      .toString()\n      .padStart(2, '0');\n    const minutes = Math.floor((milliseconds / (60 * 1000)) % 60)\n      .toString()\n      .padStart(2, '0');\n    const seconds = Math.floor((milliseconds / 1000) % 60)\n      .toString()\n      .padStart(2, '0');\n    const ms = (milliseconds % 1000).toString().padStart(3, '0');\n    return `${hours}:${minutes}:${seconds}.${ms}`;\n  };\n\n  return <div className={styles.time}>{formatTime(time)}</div>;\n};\n\nexport default FormattedTime;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAC7B,MAAME,UAAU,GAAIC,YAAY,IAAK;IACnC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CACtDI,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnB,MAAMC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,GAAI,EAAE,CAAC,CAC1DI,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnB,MAAME,OAAO,GAAGL,IAAI,CAACC,KAAK,CAAEH,YAAY,GAAG,IAAI,GAAI,EAAE,CAAC,CACnDI,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnB,MAAMG,EAAE,GAAG,CAACR,YAAY,GAAG,IAAI,EAAEI,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC5D,OAAQ,GAAEJ,KAAM,IAAGK,OAAQ,IAAGC,OAAQ,IAAGC,EAAG,EAAC;EAC/C,CAAC;EAED,oBAAOb,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACK,IAAK;IAAAY,QAAA,EAAEX,UAAU,CAACD,IAAI;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC9D,CAAC;AAACC,EAAA,GAhBInB,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}